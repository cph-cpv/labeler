name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  typecheck:
    name: "TypeScript"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Run TypeScript
        run: npx tsr generate && npm run typecheck

  build:
    name: "Build"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker Build
        run: docker build -t labeler:test .

  release:
    name: "Release / GH"
    runs-on: ubuntu-latest
    needs: [typecheck]
    if: github.event_name == 'push'
    outputs:
      git-tag: ${{ steps.semantic.outputs.git-tag }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install semantic-release
        run: npm i semantic-release@v24.2.7 @semantic-release/exec@v6.0.3 conventional-changelog-conventionalcommits@7.0.2
      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  ghcr:
    name: "Release / GHCR"
    runs-on: ubuntu-latest
    if: github.repository_owner == 'cph-cpv' && github.event_name == 'push' && needs.release.outputs.git-tag != ''
    needs: [release]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.git-tag }}
      - name: Write VERSION file
        run: echo ${{ needs.release.outputs.git-tag }} > VERSION
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ghcr.io/cph-cpv/labeler
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
